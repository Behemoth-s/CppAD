<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Cppadcg Speed: Gradient of Determinant by Minor Expansion</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Cppadcg Speed: Gradient of Determinant by Minor Expansion">
<meta name="keywords" id="keywords" content=" cppadcg speed: gradient determinant minor expansion specifications implementation ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_cppadcg_det_minor.cpp_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://coin-or.github.io/CppAD" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="speed_cppadcg.htm" target="_top">Prev</a>
</td><td><a href="cppadcg_det_minor_grad.c.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>speed</option>
<option>speed_cppadcg</option>
<option>cppadcg_det_minor.cpp</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_cppad_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_speed_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_speed_cppadcg_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_cppadcg_det_minor.cpp_htm.js'></script>
</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Specifications</option>
<option>Contents</option>
<option>Implementation</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\W}[1]{ \; #1 \; }
\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\D}[2]{ \frac{\partial #1}{\partial #2} }
\newcommand{\DD}[3]{ \frac{\partial^2 #1}{\partial #2 \partial #3} }
\newcommand{\Dpow}[2]{ \frac{\partial^{#1}}{\partial  {#2}^{#1}} }
\newcommand{\dpow}[2]{ \frac{ {\rm d}^{#1}}{{\rm d}\, {#2}^{#1}} }@)@<center><b><big><big>Cppadcg Speed: Gradient of Determinant by Minor Expansion</big></big></b></center>
<br>
<b><big><a name="Specifications" id="Specifications">Specifications</a></big></b>
<br>
See <a href="link_det_minor.htm" target="_top"><span style='white-space: nowrap'>link_det_minor</span></a>
.

<br>
<br>
<b><big><a name="Contents" id="Contents">Contents</a></big></b>
<br>
<table>
<tr><td><a href="cppadcg_det_minor_grad.c.htm" target="_top">cppadcg_det_minor_grad.c</a></td><td>Cppadcg&nbsp;Speed:&nbsp;Gradient&nbsp;of&nbsp;Determinant&nbsp;by&nbsp;Minor&nbsp;Expansion</td></tr><tr><td><a href="cppadcg_det_minor_cg.cpp.htm" target="_top">cppadcg_det_minor_cg.cpp</a></td><td>Cppadcg&nbsp;Speed:&nbsp;Source&nbsp;Generation:&nbsp;Gradient&nbsp;of&nbsp;Determinant&nbsp;by&nbsp;Minor</td></tr></table><br>
<b><big><a name="Implementation" id="Implementation">Implementation</a></big></b>

<pre><tt><b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/speed/det_by_minor.hpp&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/speed/uniform_01.hpp&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/utility/vector.hpp&gt;</font>

<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;map&gt;</font>
<b><font color="#0000FF">extern</font></b> std<font color="#990000">::</font><font color="#008080">map&lt;std::string, bool&gt;</font> global_option<font color="#990000">;</font>

<i><font color="#9A1900">// routine created by det_minor_cg</font></i>
<b><font color="#000080"># include</font></b> <font color="#FF0000">"det_minor_grad_c.hpp"</font>

<font color="#009900">bool</font> <b><font color="#000000">link_det_minor</font></b><font color="#990000">(</font>
    <font color="#008080">size_t</font>                     size     <font color="#990000">,</font>
    <font color="#008080">size_t</font>                     repeat   <font color="#990000">,</font>
    CppAD<font color="#990000">::</font><font color="#008080">vector&lt;double&gt;</font>     <font color="#990000">&amp;</font>matrix   <font color="#990000">,</font>
    CppAD<font color="#990000">::</font><font color="#008080">vector&lt;double&gt;</font>     <font color="#990000">&amp;</font>gradient <font color="#990000">)</font>
<font color="#FF0000">{</font>   <b><font color="#000000">assert</font></b><font color="#990000">(</font> matrix<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">==</font> size <font color="#990000">*</font> size <font color="#990000">);</font>
    <b><font color="#000000">assert</font></b><font color="#990000">(</font> gradient<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">==</font> size <font color="#990000">*</font> size <font color="#990000">);</font>
    <i><font color="#9A1900">// --------------------------------------------------------------------</font></i>
    <i><font color="#9A1900">// check global options</font></i>
    <b><font color="#0000FF">const</font></b> <font color="#009900">char</font><font color="#990000">*</font> valid<font color="#990000">[]</font> <font color="#990000">=</font> <font color="#FF0000">{</font> <font color="#FF0000">"onetape"</font><font color="#990000">,</font> <font color="#FF0000">"optimize"</font><font color="#FF0000">}</font><font color="#990000">;</font>
    <font color="#008080">size_t</font> n_valid <font color="#990000">=</font> <b><font color="#0000FF">sizeof</font></b><font color="#990000">(</font>valid<font color="#990000">)</font> <font color="#990000">/</font> <b><font color="#0000FF">sizeof</font></b><font color="#990000">(</font>valid<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]);</font>
    <b><font color="#0000FF">typedef</font></b> std<font color="#990000">::</font>map<font color="#990000">&lt;</font>std<font color="#990000">::</font>string<font color="#990000">,</font> <font color="#009900">bool</font><font color="#990000">&gt;::</font><font color="#008080">iterator</font> iterator<font color="#990000">;</font>
    <i><font color="#9A1900">//</font></i>
    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">iterator</font> itr<font color="#990000">=</font>global_option<font color="#990000">.</font><b><font color="#000000">begin</font></b><font color="#990000">();</font> itr<font color="#990000">!=</font>global_option<font color="#990000">.</font><b><font color="#000000">end</font></b><font color="#990000">();</font> <font color="#990000">++</font>itr<font color="#990000">)</font>
    <font color="#FF0000">{</font>   <b><font color="#0000FF">if</font></b><font color="#990000">(</font> itr<font color="#990000">-&gt;</font>second <font color="#990000">)</font>
        <font color="#FF0000">{</font>   <font color="#009900">bool</font> ok <font color="#990000">=</font> <b><font color="#0000FF">false</font></b><font color="#990000">;</font>
            <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> n_valid<font color="#990000">;</font> i<font color="#990000">++)</font>
                ok <font color="#990000">|=</font> itr<font color="#990000">-&gt;</font>first <font color="#990000">==</font> valid<font color="#990000">[</font>i<font color="#990000">];</font>
            <b><font color="#0000FF">if</font></b><font color="#990000">(</font> <font color="#990000">!</font> ok <font color="#990000">)</font>
                <b><font color="#0000FF">return</font></b> <b><font color="#0000FF">false</font></b><font color="#990000">;</font>
        <font color="#FF0000">}</font>
    <font color="#FF0000">}</font>
    <b><font color="#0000FF">if</font></b><font color="#990000">(</font> <font color="#990000">!</font> global_option<font color="#990000">[</font><font color="#FF0000">"onetape"</font><font color="#990000">]</font> <font color="#990000">)</font>
        <b><font color="#0000FF">return</font></b> <b><font color="#0000FF">false</font></b><font color="#990000">;</font>
    <font color="#009900">bool</font> optimize <font color="#990000">=</font> global_option<font color="#990000">[</font><font color="#FF0000">"optimize"</font><font color="#990000">];</font>
    <i><font color="#9A1900">// -----------------------------------------------------</font></i>
    <b><font color="#0000FF">while</font></b><font color="#990000">(</font>repeat<font color="#990000">--)</font>
    <font color="#FF0000">{</font>   <i><font color="#9A1900">// choose a matrix</font></i>
        CppAD<font color="#990000">::</font><b><font color="#000000">uniform_01</font></b><font color="#990000">(</font>size <font color="#990000">*</font> size<font color="#990000">,</font> matrix<font color="#990000">);</font>

        <i><font color="#9A1900">// compute gradient of determinant</font></i>
        <font color="#009900">int</font> flag <font color="#990000">=</font> <b><font color="#000000">det_minor_grad_c</font></b><font color="#990000">(</font>
            optimize<font color="#990000">,</font> <font color="#009900">int</font><font color="#990000">(</font>size<font color="#990000">),</font> matrix<font color="#990000">.</font><b><font color="#000000">data</font></b><font color="#990000">(),</font> gradient<font color="#990000">.</font><b><font color="#000000">data</font></b><font color="#990000">()</font>
        <font color="#990000">);</font>
        <b><font color="#0000FF">if</font></b><font color="#990000">(</font> flag <font color="#990000">!=</font> <font color="#993399">0</font> <font color="#990000">)</font>
            <b><font color="#0000FF">return</font></b> <b><font color="#0000FF">false</font></b><font color="#990000">;</font>
    <font color="#FF0000">}</font>
    <b><font color="#0000FF">return</font></b> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
<font color="#FF0000">}</font></tt></pre>

<hr>Input File: speed/cppadcg/det_minor.cpp

</body>
</html>
