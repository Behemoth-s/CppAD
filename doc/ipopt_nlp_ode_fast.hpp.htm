<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>ODE Fitting Using Fast Representation</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="ODE Fitting Using Fast Representation">
<meta name="keywords" id="keywords" content=" ode fitting using fast representation cppad_ipopt_nlp example source ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_ipopt_nlp_ode_fast.hpp_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://github.com/bradbell/cppad" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="ipopt_nlp_ode_fast.htm" target="_top">Prev</a>
</td><td><a href="ipopt_nlp_ode_run.hpp.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>Appendix</option>
<option>deprecated</option>
<option>cppad_ipopt_nlp</option>
<option>ipopt_nlp_ode</option>
<option>ipopt_nlp_ode_fast</option>
<option>ipopt_nlp_ode_fast.hpp</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>cppad_ipopt_nlp-&gt;</option>
<option>ipopt_nlp_get_started.cpp</option>
<option>ipopt_nlp_ode</option>
<option>ipopt_ode_speed.cpp</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>ipopt_nlp_ode-&gt;</option>
<option>ipopt_nlp_ode_problem</option>
<option>ipopt_nlp_ode_simple</option>
<option>ipopt_nlp_ode_fast</option>
<option>ipopt_nlp_ode_run.hpp</option>
<option>ipopt_nlp_ode_check.cpp</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>ipopt_nlp_ode_fast-&gt;</option>
<option>ipopt_nlp_ode_fast.hpp</option>
</select>
</td>
<td>ipopt_nlp_ode_fast.hpp</td>
<td>Headings</td>
</tr></table><br>
@(@\newcommand{\W}[1]{ \; #1 \; }
\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\D}[2]{ \frac{\partial #1}{\partial #2} }
\newcommand{\DD}[3]{ \frac{\partial^2 #1}{\partial #2 \partial #3} }
\newcommand{\Dpow}[2]{ \frac{\partial^{#1}}{\partial  {#2}^{#1}} }
\newcommand{\dpow}[2]{ \frac{ {\rm d}^{#1}}{{\rm d}\, {#2}^{#1}} }@)@<center><b><big><big>ODE Fitting Using Fast Representation</big></big></b></center>
<code><font color="blue"><pre><tt><b><font color="#000080"># include</font></b> <font color="#FF0000">"ode_problem.hpp"</font>

<b><font color="#0000FF">namespace</font></b> <font color="#FF0000">{</font>
     <b><font color="#0000FF">using</font></b> <b><font color="#0000FF">namespace</font></b> cppad_ipopt<font color="#990000">;</font>

     <b><font color="#0000FF">class</font></b> <font color="#008080">FG_fast</font> <font color="#990000">:</font> <b><font color="#0000FF">public</font></b> cppad_ipopt_fg_info
     <font color="#FF0000">{</font>
     <b><font color="#0000FF">private</font></b><font color="#990000">:</font>
          <font color="#009900">bool</font>       retape_<font color="#990000">;</font>
          <font color="#008080">SizeVector</font> N_<font color="#990000">;</font>
          <font color="#008080">SizeVector</font> S_<font color="#990000">;</font>
     <b><font color="#0000FF">public</font></b><font color="#990000">:</font>
          <i><font color="#9A1900">// derived class part of constructor</font></i>
          <b><font color="#000000">FG_fast</font></b><font color="#990000">(</font><font color="#009900">bool</font> retape_in<font color="#990000">,</font> <b><font color="#0000FF">const</font></b> SizeVector<font color="#990000">&amp;</font> N<font color="#990000">)</font>
          <font color="#990000">:</font> <b><font color="#000000">retape_</font></b> <font color="#990000">(</font>retape_in<font color="#990000">),</font> <b><font color="#000000">N_</font></b><font color="#990000">(</font>N<font color="#990000">)</font>
          <font color="#FF0000">{</font>    <b><font color="#000000">assert</font></b><font color="#990000">(</font> N_<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">==</font> <font color="#993399">0</font> <font color="#990000">);</font>
               S_<font color="#990000">.</font><b><font color="#000000">resize</font></b><font color="#990000">(</font> N_<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">);</font>
               S_<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font>
               <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">1</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> N_<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">();</font> i<font color="#990000">++)</font>
                    S_<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">=</font> S_<font color="#990000">[</font>i<font color="#990000">-</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">+</font> N_<font color="#990000">[</font>i<font color="#990000">];</font>
          <font color="#FF0000">}</font>
          <i><font color="#9A1900">// r^k for k = 0, 1, ..., Nz-1 used for measurements</font></i>
          <i><font color="#9A1900">// r^k for k = Nz              use for initial condition</font></i>
          <i><font color="#9A1900">// r^k for k = Nz+1, ..., 2*Nz used for trapezoidal approx</font></i>
          <font color="#008080">size_t</font> <b><font color="#000000">number_functions</font></b><font color="#990000">(</font><font color="#009900">void</font><font color="#990000">)</font>
          <font color="#FF0000">{</font>    <b><font color="#0000FF">return</font></b> Nz <font color="#990000">+</font> <font color="#993399">1</font> <font color="#990000">+</font> Nz<font color="#990000">;</font> <font color="#FF0000">}</font>
          <font color="#008080">ADVector</font> <b><font color="#000000">eval_r</font></b><font color="#990000">(</font><font color="#008080">size_t</font> k<font color="#990000">,</font> <b><font color="#0000FF">const</font></b> <font color="#008080">ADVector</font> <font color="#990000">&amp;</font>u<font color="#990000">)</font>
          <font color="#FF0000">{</font>    <b><font color="#000000">count_eval_r</font></b><font color="#990000">();</font>

               <font color="#008080">size_t</font> j<font color="#990000">;</font>
               <font color="#008080">ADVector</font> <b><font color="#000000">y</font></b><font color="#990000">(</font>Ny<font color="#990000">),</font> <b><font color="#000000">a</font></b><font color="#990000">(</font>Na<font color="#990000">);</font>
               <i><font color="#9A1900">// objective function --------------------------------</font></i>
               <b><font color="#0000FF">if</font></b><font color="#990000">(</font> k <font color="#990000">&lt;</font> Nz <font color="#990000">)</font>
               <font color="#FF0000">{</font>    <i><font color="#9A1900">// used for measurement with index k+1</font></i>
                    <font color="#008080">ADVector</font> <b><font color="#000000">r</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">);</font> <i><font color="#9A1900">// return value is a scalar</font></i>
                    <i><font color="#9A1900">// u is [y( s[k+1] ) , a]</font></i>
                    <b><font color="#0000FF">for</font></b><font color="#990000">(</font>j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> Ny<font color="#990000">;</font> j<font color="#990000">++)</font>
                         y<font color="#990000">[</font>j<font color="#990000">]</font> <font color="#990000">=</font> u<font color="#990000">[</font>j<font color="#990000">];</font>
                    <b><font color="#0000FF">for</font></b><font color="#990000">(</font>j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> Na<font color="#990000">;</font> j<font color="#990000">++)</font>
                         a<font color="#990000">[</font>j<font color="#990000">]</font> <font color="#990000">=</font> u<font color="#990000">[</font>Ny <font color="#990000">+</font> j<font color="#990000">];</font>
                    r<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> eval_H<font color="#990000">&lt;</font>ADNumber<font color="#990000">&gt;(</font>k<font color="#990000">+</font><font color="#993399">1</font><font color="#990000">,</font> y<font color="#990000">,</font> a<font color="#990000">);</font>
                    <b><font color="#0000FF">return</font></b> r<font color="#990000">;</font>
               <font color="#FF0000">}</font>
               <i><font color="#9A1900">// initial condition ---------------------------------</font></i>
               <b><font color="#0000FF">if</font></b><font color="#990000">(</font> k <font color="#990000">==</font> Nz <font color="#990000">)</font>
               <font color="#FF0000">{</font>    <font color="#008080">ADVector</font> <b><font color="#000000">r</font></b><font color="#990000">(</font>Ny<font color="#990000">),</font> <b><font color="#000000">F</font></b><font color="#990000">(</font>Ny<font color="#990000">);</font>
                    <i><font color="#9A1900">// u is [y(t), a] at t = 0</font></i>
                    <b><font color="#0000FF">for</font></b><font color="#990000">(</font>j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> Ny<font color="#990000">;</font> j<font color="#990000">++)</font>
                         y<font color="#990000">[</font>j<font color="#990000">]</font> <font color="#990000">=</font> u<font color="#990000">[</font>j<font color="#990000">];</font>
                    <b><font color="#0000FF">for</font></b><font color="#990000">(</font>j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> Na<font color="#990000">;</font> j<font color="#990000">++)</font>
                         a<font color="#990000">[</font>j<font color="#990000">]</font> <font color="#990000">=</font> u<font color="#990000">[</font>Ny <font color="#990000">+</font> j<font color="#990000">];</font>
                    F    <font color="#990000">=</font> <b><font color="#000000">eval_F</font></b><font color="#990000">(</font>a<font color="#990000">);</font>
                    <b><font color="#0000FF">for</font></b><font color="#990000">(</font>j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> Ny<font color="#990000">;</font> j<font color="#990000">++)</font>
                         r<font color="#990000">[</font>j<font color="#990000">]</font>   <font color="#990000">=</font> y<font color="#990000">[</font>j<font color="#990000">]</font> <font color="#990000">-</font> F<font color="#990000">[</font>j<font color="#990000">];</font>
                    <b><font color="#0000FF">return</font></b>  r<font color="#990000">;</font>
               <font color="#FF0000">}</font>
               <i><font color="#9A1900">// trapezoidal approximation -------------------------</font></i>
               <font color="#008080">ADVector</font> <b><font color="#000000">ym</font></b><font color="#990000">(</font>Ny<font color="#990000">),</font> <b><font color="#000000">G</font></b><font color="#990000">(</font>Ny<font color="#990000">),</font> <b><font color="#000000">Gm</font></b><font color="#990000">(</font>Ny<font color="#990000">),</font> <b><font color="#000000">r</font></b><font color="#990000">(</font>Ny<font color="#990000">);</font>
               <i><font color="#9A1900">// r^k for k = Nz+1, ... , 2*Nz</font></i>
               <i><font color="#9A1900">// interval between data samples</font></i>
               <font color="#008080">Number</font> T <font color="#990000">=</font> s<font color="#990000">[</font>k<font color="#990000">-</font>Nz<font color="#990000">]</font> <font color="#990000">-</font> s<font color="#990000">[</font>k<font color="#990000">-</font>Nz<font color="#990000">-</font><font color="#993399">1</font><font color="#990000">];</font>
               <i><font color="#9A1900">// integration step size</font></i>
               <font color="#008080">Number</font> dt <font color="#990000">=</font> T <font color="#990000">/</font> <b><font color="#000000">Number</font></b><font color="#990000">(</font> N_<font color="#990000">[</font>k<font color="#990000">-</font>Nz<font color="#990000">]</font> <font color="#990000">);</font>
               <i><font color="#9A1900">// u = [ y(t[i-1], a) , y(t[i], a), a )</font></i>
               <b><font color="#0000FF">for</font></b><font color="#990000">(</font>j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> Ny<font color="#990000">;</font> j<font color="#990000">++)</font>
               <font color="#FF0000">{</font>    ym<font color="#990000">[</font>j<font color="#990000">]</font> <font color="#990000">=</font> u<font color="#990000">[</font>j<font color="#990000">];</font>
                    y<font color="#990000">[</font>j<font color="#990000">]</font>  <font color="#990000">=</font> u<font color="#990000">[</font>Ny <font color="#990000">+</font> j<font color="#990000">];</font>
               <font color="#FF0000">}</font>
               <b><font color="#0000FF">for</font></b><font color="#990000">(</font>j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> Na<font color="#990000">;</font> j<font color="#990000">++)</font>
                    a<font color="#990000">[</font>j<font color="#990000">]</font> <font color="#990000">=</font> u<font color="#990000">[</font><font color="#993399">2</font> <font color="#990000">*</font> Ny <font color="#990000">+</font> j<font color="#990000">];</font>
               Gm  <font color="#990000">=</font> <b><font color="#000000">eval_G</font></b><font color="#990000">(</font>ym<font color="#990000">,</font> a<font color="#990000">);</font>
               G   <font color="#990000">=</font> <b><font color="#000000">eval_G</font></b><font color="#990000">(</font>y<font color="#990000">,</font>  a<font color="#990000">);</font>
               <b><font color="#0000FF">for</font></b><font color="#990000">(</font>j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> Ny<font color="#990000">;</font> j<font color="#990000">++)</font>
                    r<font color="#990000">[</font>j<font color="#990000">]</font> <font color="#990000">=</font> y<font color="#990000">[</font>j<font color="#990000">]</font> <font color="#990000">-</font> ym<font color="#990000">[</font>j<font color="#990000">]</font> <font color="#990000">-</font> <font color="#990000">(</font>G<font color="#990000">[</font>j<font color="#990000">]</font> <font color="#990000">+</font> Gm<font color="#990000">[</font>j<font color="#990000">])</font> <font color="#990000">*</font> dt <font color="#990000">/</font> <font color="#993399">2</font><font color="#990000">.;</font>
               <b><font color="#0000FF">return</font></b> r<font color="#990000">;</font>
          <font color="#FF0000">}</font>
          <i><font color="#9A1900">// The operations sequence for r_eval does not depend on u,</font></i>
          <i><font color="#9A1900">// hence retape = false should work and be faster.</font></i>
          <font color="#009900">bool</font> <b><font color="#000000">retape</font></b><font color="#990000">(</font><font color="#008080">size_t</font> k<font color="#990000">)</font>
          <font color="#FF0000">{</font>    <b><font color="#0000FF">return</font></b> retape_<font color="#990000">;</font> <font color="#FF0000">}</font>
          <i><font color="#9A1900">// size of the vector u in eval_r</font></i>
          <font color="#008080">size_t</font> <b><font color="#000000">domain_size</font></b><font color="#990000">(</font><font color="#008080">size_t</font> k<font color="#990000">)</font>
          <font color="#FF0000">{</font>    <b><font color="#0000FF">if</font></b><font color="#990000">(</font> k <font color="#990000">&lt;</font> Nz <font color="#990000">)</font>
                    <b><font color="#0000FF">return</font></b> Ny <font color="#990000">+</font> Na<font color="#990000">;</font>   <i><font color="#9A1900">// objective function</font></i>
               <b><font color="#0000FF">if</font></b><font color="#990000">(</font> k <font color="#990000">==</font> Nz <font color="#990000">)</font>
                    <b><font color="#0000FF">return</font></b> Ny <font color="#990000">+</font> Na<font color="#990000">;</font>  <i><font color="#9A1900">// initial value constraint</font></i>
               <b><font color="#0000FF">return</font></b> <font color="#993399">2</font> <font color="#990000">*</font> Ny <font color="#990000">+</font> Na<font color="#990000">;</font>      <i><font color="#9A1900">// trapezodial constraints</font></i>
          <font color="#FF0000">}</font>
          <i><font color="#9A1900">// size of the return value from eval_r</font></i>
          <font color="#008080">size_t</font> <b><font color="#000000">range_size</font></b><font color="#990000">(</font><font color="#008080">size_t</font> k<font color="#990000">)</font>
          <font color="#FF0000">{</font>    <b><font color="#0000FF">if</font></b><font color="#990000">(</font> k <font color="#990000">&lt;</font> Nz <font color="#990000">)</font>
                    <b><font color="#0000FF">return</font></b> <font color="#993399">1</font><font color="#990000">;</font>
               <b><font color="#0000FF">return</font></b> Ny<font color="#990000">;</font>
          <font color="#FF0000">}</font>
          <i><font color="#9A1900">// number of terms that use this value of k</font></i>
          <font color="#008080">size_t</font> <b><font color="#000000">number_terms</font></b><font color="#990000">(</font><font color="#008080">size_t</font> k<font color="#990000">)</font>
          <font color="#FF0000">{</font>    <b><font color="#0000FF">if</font></b><font color="#990000">(</font> k <font color="#990000">&lt;=</font> Nz <font color="#990000">)</font>
                    <b><font color="#0000FF">return</font></b> <font color="#993399">1</font><font color="#990000">;</font>  <i><font color="#9A1900">// r^k used once for k &lt;= Nz</font></i>
               <i><font color="#9A1900">// r^k used N_[k-Nz] times for k &gt; Nz</font></i>
               <b><font color="#0000FF">return</font></b> N_<font color="#990000">[</font>k<font color="#990000">-</font>Nz<font color="#990000">];</font>
          <font color="#FF0000">}</font>
          <font color="#009900">void</font> <b><font color="#000000">index</font></b><font color="#990000">(</font><font color="#008080">size_t</font> k<font color="#990000">,</font> <font color="#008080">size_t</font> ell<font color="#990000">,</font> SizeVector<font color="#990000">&amp;</font> I<font color="#990000">,</font> SizeVector<font color="#990000">&amp;</font> J<font color="#990000">)</font>
          <font color="#FF0000">{</font>    <font color="#008080">size_t</font> i<font color="#990000">,</font> j<font color="#990000">;</font>
               <i><font color="#9A1900">// # of components of x corresponding to values for y</font></i>
               <font color="#008080">size_t</font> ny_inx <font color="#990000">=</font> <font color="#990000">(</font>S_<font color="#990000">[</font>Nz<font color="#990000">]</font> <font color="#990000">+</font> <font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">*</font> Ny<font color="#990000">;</font>
               <i><font color="#9A1900">// objective function -------------------------------</font></i>
               <b><font color="#0000FF">if</font></b><font color="#990000">(</font> k <font color="#990000">&lt;</font> Nz <font color="#990000">)</font>
               <font color="#FF0000">{</font>    <i><font color="#9A1900">// index in fg corresponding to objective</font></i>
                    I<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font>
                    <i><font color="#9A1900">// u = [ y(t, a) , a ]</font></i>
                    <i><font color="#9A1900">// The first Ny components of u is y(t) at</font></i>
                    <i><font color="#9A1900">//   t = s[k+1] = t[S_[k+1]]</font></i>
                    <i><font color="#9A1900">// x indices corresponding to this value of y</font></i>
                    <b><font color="#0000FF">for</font></b><font color="#990000">(</font>j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> Ny<font color="#990000">;</font> j<font color="#990000">++)</font>
                         J<font color="#990000">[</font>j<font color="#990000">]</font> <font color="#990000">=</font> S_<font color="#990000">[</font>k <font color="#990000">+</font> <font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">*</font> Ny <font color="#990000">+</font> j<font color="#990000">;</font>
                    <i><font color="#9A1900">// components of x correspondig to a</font></i>
                    <b><font color="#0000FF">for</font></b><font color="#990000">(</font>j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> Na<font color="#990000">;</font> j<font color="#990000">++)</font>
                         J<font color="#990000">[</font>Ny <font color="#990000">+</font> j<font color="#990000">]</font> <font color="#990000">=</font> ny_inx <font color="#990000">+</font> j<font color="#990000">;</font>
                    <b><font color="#0000FF">return</font></b><font color="#990000">;</font>
               <font color="#FF0000">}</font>
               <i><font color="#9A1900">// initial conditions --------------------------------</font></i>
               <b><font color="#0000FF">if</font></b><font color="#990000">(</font> k <font color="#990000">==</font> Nz <font color="#990000">)</font>
               <font color="#FF0000">{</font>    <i><font color="#9A1900">// index in fg for inidial condition constraint</font></i>
                    <b><font color="#0000FF">for</font></b><font color="#990000">(</font>j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> Ny<font color="#990000">;</font> j<font color="#990000">++)</font>
                         I<font color="#990000">[</font>j<font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">1</font> <font color="#990000">+</font> j<font color="#990000">;</font>
                    <i><font color="#9A1900">// u = [ y(t, a) , a ] where t = 0</font></i>
                    <i><font color="#9A1900">// x indices corresponding to this value of y</font></i>
                    <b><font color="#0000FF">for</font></b><font color="#990000">(</font>j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> Ny<font color="#990000">;</font> j<font color="#990000">++)</font>
                         J<font color="#990000">[</font>j<font color="#990000">]</font> <font color="#990000">=</font> j<font color="#990000">;</font>
                    <i><font color="#9A1900">// following that, u contains the vector a</font></i>
                    <b><font color="#0000FF">for</font></b><font color="#990000">(</font>j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> Na<font color="#990000">;</font> j<font color="#990000">++)</font>
                         J<font color="#990000">[</font>Ny <font color="#990000">+</font> j<font color="#990000">]</font> <font color="#990000">=</font> ny_inx <font color="#990000">+</font> j<font color="#990000">;</font>
                    <b><font color="#0000FF">return</font></b><font color="#990000">;</font>
               <font color="#FF0000">}</font>
               <i><font color="#9A1900">// trapoziodal approximation -------------------------</font></i>
               <i><font color="#9A1900">// index of first grid point in this approximation</font></i>
               i <font color="#990000">=</font> S_<font color="#990000">[</font>k <font color="#990000">-</font> Nz <font color="#990000">-</font> <font color="#993399">1</font><font color="#990000">]</font>  <font color="#990000">+</font> ell<font color="#990000">;</font>
               <i><font color="#9A1900">// There are Ny difference equations for each time</font></i>
               <i><font color="#9A1900">// point.  Add one for the objective function, and Ny</font></i>
               <i><font color="#9A1900">// for the initial value constraints.</font></i>
               <b><font color="#0000FF">for</font></b><font color="#990000">(</font>j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> Ny<font color="#990000">;</font> j<font color="#990000">++)</font>
                    I<font color="#990000">[</font>j<font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">1</font> <font color="#990000">+</font> Ny <font color="#990000">+</font> i <font color="#990000">*</font> Ny <font color="#990000">+</font> j<font color="#990000">;</font>
               <i><font color="#9A1900">// u = [ y(t, a) , y(t+dt, a) , a ] at t = t[i]</font></i>
               <b><font color="#0000FF">for</font></b><font color="#990000">(</font>j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> Ny<font color="#990000">;</font> j<font color="#990000">++)</font>
               <font color="#FF0000">{</font>    J<font color="#990000">[</font>j<font color="#990000">]</font>      <font color="#990000">=</font> i <font color="#990000">*</font> Ny  <font color="#990000">+</font> j<font color="#990000">;</font> <i><font color="#9A1900">// y^i indices</font></i>
                    J<font color="#990000">[</font>Ny <font color="#990000">+</font> j<font color="#990000">]</font> <font color="#990000">=</font> J<font color="#990000">[</font>j<font color="#990000">]</font> <font color="#990000">+</font> Ny<font color="#990000">;</font>   <i><font color="#9A1900">// y^{i+1} indices</font></i>
               <font color="#FF0000">}</font>
               <b><font color="#0000FF">for</font></b><font color="#990000">(</font>j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> Na<font color="#990000">;</font> j<font color="#990000">++)</font>
                    J<font color="#990000">[</font><font color="#993399">2</font> <font color="#990000">*</font> Ny <font color="#990000">+</font> j<font color="#990000">]</font> <font color="#990000">=</font> ny_inx <font color="#990000">+</font> j<font color="#990000">;</font> <i><font color="#9A1900">// a indices</font></i>
          <font color="#FF0000">}</font>
     <font color="#FF0000">}</font><font color="#990000">;</font>

<font color="#FF0000">}</font></tt></pre>
</font></code>
<hr>Input File: cppad_ipopt/example/ode_fast.hpp

</body>
</html>
