<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Convert an AD Variable to a Parameter</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Convert an AD Variable to a Parameter">
<meta name="keywords" id="keywords" content=" convert ad variable to parameter Var2par from value_ obtain during taping syntax see also purpose x y example ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_var2par_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://coin-or.github.io/CppAD/" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="print_for_string.cpp.htm" target="_top">Prev</a>
</td><td><a href="var2par.cpp.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>AD</option>
<option>Convert</option>
<option>Var2Par</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>CppAD-&gt;</option>
<option>Install</option>
<option>Introduction</option>
<option>AD</option>
<option>ADFun</option>
<option>preprocessor</option>
<option>multi_thread</option>
<option>utility</option>
<option>ipopt_solve</option>
<option>Example</option>
<option>speed</option>
<option>Appendix</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>AD-&gt;</option>
<option>ad_ctor</option>
<option>ad_assign</option>
<option>Convert</option>
<option>ADValued</option>
<option>BoolValued</option>
<option>VecAD</option>
<option>base_require</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>Convert-&gt;</option>
<option>Value</option>
<option>Integer</option>
<option>ad_to_string</option>
<option>ad_input</option>
<option>ad_output</option>
<option>PrintFor</option>
<option>Var2Par</option>
</select>
</td>
<td>
<select onchange='choose_down0(this)'>
<option>Var2Par-&gt;</option>
<option>var2par.cpp</option>
</select>
</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Syntax</option>
<option>See Also</option>
<option>Purpose</option>
<option>x</option>
<option>y</option>
<option>Example</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\W}[1]{ \; #1 \; }
\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\D}[2]{ \frac{\partial #1}{\partial #2} }
\newcommand{\DD}[3]{ \frac{\partial^2 #1}{\partial #2 \partial #3} }
\newcommand{\Dpow}[2]{ \frac{\partial^{#1}}{\partial  {#2}^{#1}} }
\newcommand{\dpow}[2]{ \frac{ {\rm d}^{#1}}{{\rm d}\, {#2}^{#1}} }@)@<center><b><big><big>Convert an AD Variable to a Parameter</big></big></b></center>
<br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><i><font color="black"><span style='white-space: nowrap'>y</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;Var2Par(</span></font><i><font color="black"><span style='white-space: nowrap'>x</span></font></i><font color="blue"><span style='white-space: nowrap'>)</span></font></code>


<br>
<br>
<b><big><a name="See Also" id="See Also">See Also</a></big></b>

<br>
<a href="value.htm" target="_top"><span style='white-space: nowrap'>value</span></a>



<br>
<br>
<b><big><a name="Purpose" id="Purpose">Purpose</a></big></b>
<br>
Returns a
<a href="glossary.htm#Parameter" target="_top"><span style='white-space: nowrap'>parameter</span></a>
 
<code><i><font color="black"><span style='white-space: nowrap'>y</span></font></i></code>

with the same value as the
<a href="glossary.htm#Variable" target="_top"><span style='white-space: nowrap'>variable</span></a>
 
<code><i><font color="black"><span style='white-space: nowrap'>x</span></font></i></code>
.

<br>
<br>
<b><big><a name="x" id="x">x</a></big></b>
<br>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>x</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;AD&lt;</span></font><i><font color="black"><span style='white-space: nowrap'>Base</span></font></i><font color="blue"><span style='white-space: nowrap'>&gt;&nbsp;&amp;x<br>
</span></font></code>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>x</span></font></i></code>
 may be a variable or parameter.


<br>
<br>
<b><big><a name="y" id="y">y</a></big></b>
<br>
The result 
<code><i><font color="black"><span style='white-space: nowrap'>y</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AD&lt;</span></font><i><font color="black"><span style='white-space: nowrap'>Base</span></font></i><font color="blue"><span style='white-space: nowrap'>&gt;&nbsp;&amp;y<br>
</span></font></code>
The return value 
<code><i><font color="black"><span style='white-space: nowrap'>y</span></font></i></code>
 will be a parameter.


<br>
<br>
<b><big><a name="Example" id="Example">Example</a></big></b>

<br>
The file
<a href="var2par.cpp.htm" target="_top"><span style='white-space: nowrap'>var2par.cpp</span></a>

contains an example and test of this operation.
It returns true if it succeeds and false otherwise.


<hr>Input File: cppad/core/var2par.hpp

</body>
</html>
