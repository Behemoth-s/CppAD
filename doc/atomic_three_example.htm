<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Example Defining Atomic Functions: Third Generation</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Example Defining Atomic Functions: Third Generation">
<meta name="keywords" id="keywords" content=" example defining atomic functions: third generation ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_atomic_three_example_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://coin-or.github.io/CppAD" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="atomic_three_rev_depend.cpp.htm" target="_top">Prev</a>
</td><td><a href="atomic_three_get_started.cpp.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>AD</option>
<option>ADValued</option>
<option>atomic</option>
<option>atomic_three_example</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>AD-&gt;</option>
<option>ad_ctor</option>
<option>ad_assign</option>
<option>Convert</option>
<option>ADValued</option>
<option>BoolValued</option>
<option>VecAD</option>
<option>base_require</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>ADValued-&gt;</option>
<option>Arithmetic</option>
<option>unary_standard_math</option>
<option>binary_math</option>
<option>CondExp</option>
<option>Discrete</option>
<option>numeric_limits</option>
<option>atomic</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>atomic-&gt;</option>
<option>atomic_three</option>
<option>atomic_three_example</option>
<option>chkpoint_one</option>
<option>chkpoint_two</option>
</select>
</td>
<td>
<select onchange='choose_down0(this)'>
<option>atomic_three_example-&gt;</option>
<option>atomic_three_get_started.cpp</option>
<option>atomic_three_norm_sq.cpp</option>
<option>atomic_three_tangent.cpp</option>
<option>atomic_three_base2ad.cpp</option>
<option>atomic_three_reciprocal.cpp</option>
<option>atomic_three_mat_mul.cpp</option>
</select>
</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Contents</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\W}[1]{ \; #1 \; }
\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\D}[2]{ \frac{\partial #1}{\partial #2} }
\newcommand{\DD}[3]{ \frac{\partial^2 #1}{\partial #2 \partial #3} }
\newcommand{\Dpow}[2]{ \frac{\partial^{#1}}{\partial  {#2}^{#1}} }
\newcommand{\dpow}[2]{ \frac{ {\rm d}^{#1}}{{\rm d}\, {#2}^{#1}} }@)@<center><b><big><big>Example Defining Atomic Functions: Third Generation</big></big></b></center>
<br>
<b><big><a name="Contents" id="Contents">Contents</a></big></b>
<br>
<table>
<tr><td><a href="atomic_three_get_started.cpp.htm" target="_top">atomic_three_get_started.cpp</a></td><td>Getting&nbsp;Started&nbsp;with&nbsp;Atomic&nbsp;Functions:&nbsp;Example&nbsp;and&nbsp;Test</td></tr><tr><td><a href="atomic_three_norm_sq.cpp.htm" target="_top">atomic_three_norm_sq.cpp</a></td><td>Atomic&nbsp;Euclidean&nbsp;Norm&nbsp;Squared:&nbsp;Example&nbsp;and&nbsp;Test</td></tr><tr><td><a href="atomic_three_tangent.cpp.htm" target="_top">atomic_three_tangent.cpp</a></td><td>Tan&nbsp;and&nbsp;Tanh&nbsp;as&nbsp;User&nbsp;Atomic&nbsp;Operations:&nbsp;Example&nbsp;and&nbsp;Test</td></tr><tr><td><a href="atomic_three_base2ad.cpp.htm" target="_top">atomic_three_base2ad.cpp</a></td><td>base2ad&nbsp;with&nbsp;Atomic&nbsp;Operations:&nbsp;Example&nbsp;and&nbsp;Test</td></tr><tr><td><a href="atomic_three_reciprocal.cpp.htm" target="_top">atomic_three_reciprocal.cpp</a></td><td>Reciprocal&nbsp;as&nbsp;an&nbsp;Atomic&nbsp;Operation:&nbsp;Example&nbsp;and&nbsp;Test</td></tr><tr><td><a href="atomic_three_mat_mul.cpp.htm" target="_top">atomic_three_mat_mul.cpp</a></td><td>User&nbsp;Atomic&nbsp;Matrix&nbsp;Multiply:&nbsp;Example&nbsp;and&nbsp;Test</td></tr></table>
<hr>Input File: include/cppad/core/atomic/atomic_three.hpp

</body>
</html>
