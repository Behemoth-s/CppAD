<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'
>
</script>
<head>
<title>The Pow Integer Exponent: Example and Test</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="The Pow Integer Exponent: Example and Test">
<meta name="keywords" id="keywords" content=" the pow integer exponent: example test int ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_pow_int.cpp_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://coin-or.github.io/CppAD/doc/index.html" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="pow_int.htm" target="_top">Prev</a>
</td><td><a href="poly.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>utility</option>
<option>pow_int</option>
<option>pow_int.cpp</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>CppAD-&gt;</option>
<option>Install</option>
<option>Introduction</option>
<option>AD</option>
<option>ADFun</option>
<option>preprocessor</option>
<option>multi_thread</option>
<option>utility</option>
<option>ipopt_solve</option>
<option>Example</option>
<option>speed</option>
<option>Appendix</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>utility-&gt;</option>
<option>ErrorHandler</option>
<option>NearEqual</option>
<option>speed_test</option>
<option>SpeedTest</option>
<option>time_test</option>
<option>test_boolofvoid</option>
<option>NumericType</option>
<option>CheckNumericType</option>
<option>SimpleVector</option>
<option>CheckSimpleVector</option>
<option>nan</option>
<option>pow_int</option>
<option>Poly</option>
<option>LuDetAndSolve</option>
<option>RombergOne</option>
<option>RombergMul</option>
<option>Runge45</option>
<option>Rosen34</option>
<option>OdeErrControl</option>
<option>OdeGear</option>
<option>OdeGearControl</option>
<option>CppAD_vector</option>
<option>thread_alloc</option>
<option>index_sort</option>
<option>to_string</option>
<option>set_union</option>
<option>sparse_rc</option>
<option>sparse_rcv</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>pow_int-&gt;</option>
<option>pow_int.cpp</option>
</select>
</td>
<td>pow_int.cpp</td>
<td>Headings</td>
</tr></table><br>
@(@\newcommand{\W}[1]{ \; #1 \; }
\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\D}[2]{ \frac{\partial #1}{\partial #2} }
\newcommand{\DD}[3]{ \frac{\partial^2 #1}{\partial #2 \partial #3} }
\newcommand{\Dpow}[2]{ \frac{\partial^{#1}}{\partial  {#2}^{#1}} }
\newcommand{\dpow}[2]{ \frac{ {\rm d}^{#1}}{{\rm d}\, {#2}^{#1}} }@)@


<center><b><big><big>The Pow Integer Exponent: Example and Test</big></big></b></center>
<code><font color="blue"><pre><tt>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/cppad.hpp&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cmath&gt;</font>

<font color="#009900">bool</font> <b><font color="#000000">pow_int</font></b><font color="#990000">(</font><font color="#009900">void</font><font color="#990000">)</font>
<font color="#FF0000">{</font>    <font color="#009900">bool</font> ok <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
     <b><font color="#0000FF">using</font></b> CppAD<font color="#990000">::</font>AD<font color="#990000">;</font>
     <b><font color="#0000FF">using</font></b> CppAD<font color="#990000">::</font>NearEqual<font color="#990000">;</font>
     <font color="#009900">double</font> eps99 <font color="#990000">=</font> <font color="#993399">99.0</font> <font color="#990000">*</font> std<font color="#990000">::</font>numeric_limits<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;::</font><b><font color="#000000">epsilon</font></b><font color="#990000">();</font>

     <i><font color="#9A1900">// declare independent variables and start tape recording</font></i>
     <font color="#008080">size_t</font> n  <font color="#990000">=</font> <font color="#993399">1</font><font color="#990000">;</font>
     <font color="#009900">double</font> x0 <font color="#990000">=</font> <font color="#990000">-</font><font color="#993399">0.5</font><font color="#990000">;</font>
     <b><font color="#000000">CPPAD_TESTVECTOR</font></b><font color="#990000">(</font>AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;)</font> <b><font color="#000000">x</font></b><font color="#990000">(</font>n<font color="#990000">);</font>
     x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font>      <font color="#990000">=</font> x0<font color="#990000">;</font>
     CppAD<font color="#990000">::</font><b><font color="#000000">Independent</font></b><font color="#990000">(</font>x<font color="#990000">);</font>

     <i><font color="#9A1900">// dependent variable vector</font></i>
     <font color="#008080">size_t</font> m <font color="#990000">=</font> <font color="#993399">7</font><font color="#990000">;</font>
     <b><font color="#000000">CPPAD_TESTVECTOR</font></b><font color="#990000">(</font>AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;)</font> <b><font color="#000000">y</font></b><font color="#990000">(</font>m<font color="#990000">);</font>
     <font color="#009900">int</font> i<font color="#990000">;</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font>i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> <font color="#009900">int</font><font color="#990000">(</font>m<font color="#990000">);</font> i<font color="#990000">++)</font>
          y<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">=</font> CppAD<font color="#990000">::</font><b><font color="#000000">pow</font></b><font color="#990000">(</font>x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">],</font> i <font color="#990000">-</font> <font color="#993399">3</font><font color="#990000">);</font>

     <i><font color="#9A1900">// create f: x -&gt; y and stop tape recording</font></i>
     CppAD<font color="#990000">::</font><font color="#008080">ADFun&lt;double&gt;</font> <b><font color="#000000">f</font></b><font color="#990000">(</font>x<font color="#990000">,</font> y<font color="#990000">);</font>

     <i><font color="#9A1900">// check value</font></i>
     <font color="#009900">double</font> check<font color="#990000">;</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font>i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> <font color="#009900">int</font><font color="#990000">(</font>m<font color="#990000">);</font> i<font color="#990000">++)</font>
     <font color="#FF0000">{</font>    check <font color="#990000">=</font> std<font color="#990000">::</font><b><font color="#000000">pow</font></b><font color="#990000">(</font>x0<font color="#990000">,</font> <font color="#009900">double</font><font color="#990000">(</font>i <font color="#990000">-</font> <font color="#993399">3</font><font color="#990000">));</font>
          ok <font color="#990000">&amp;=</font> <b><font color="#000000">NearEqual</font></b><font color="#990000">(</font>y<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">,</font> check<font color="#990000">,</font>  eps99 <font color="#990000">,</font> eps99<font color="#990000">);</font>
     <font color="#FF0000">}</font>

     <i><font color="#9A1900">// forward computation of first partial w.r.t. x[0]</font></i>
     <b><font color="#000000">CPPAD_TESTVECTOR</font></b><font color="#990000">(</font><font color="#009900">double</font><font color="#990000">)</font> <b><font color="#000000">dx</font></b><font color="#990000">(</font>n<font color="#990000">);</font>
     <b><font color="#000000">CPPAD_TESTVECTOR</font></b><font color="#990000">(</font><font color="#009900">double</font><font color="#990000">)</font> <b><font color="#000000">dy</font></b><font color="#990000">(</font>m<font color="#990000">);</font>
     dx<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">1</font><font color="#990000">.;</font>
     dy    <font color="#990000">=</font> f<font color="#990000">.</font><b><font color="#000000">Forward</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">,</font> dx<font color="#990000">);</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font>i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> <font color="#009900">int</font><font color="#990000">(</font>m<font color="#990000">);</font> i<font color="#990000">++)</font>
     <font color="#FF0000">{</font>    check <font color="#990000">=</font> <font color="#009900">double</font><font color="#990000">(</font>i<font color="#990000">-</font><font color="#993399">3</font><font color="#990000">)</font> <font color="#990000">*</font> std<font color="#990000">::</font><b><font color="#000000">pow</font></b><font color="#990000">(</font>x0<font color="#990000">,</font> <font color="#009900">double</font><font color="#990000">(</font>i <font color="#990000">-</font> <font color="#993399">4</font><font color="#990000">));</font>
          ok <font color="#990000">&amp;=</font> <b><font color="#000000">NearEqual</font></b><font color="#990000">(</font>dy<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">,</font> check<font color="#990000">,</font>  eps99 <font color="#990000">,</font> eps99<font color="#990000">);</font>
     <font color="#FF0000">}</font>

     <i><font color="#9A1900">// reverse computation of derivative of y[i]</font></i>
     <b><font color="#000000">CPPAD_TESTVECTOR</font></b><font color="#990000">(</font><font color="#009900">double</font><font color="#990000">)</font>  <b><font color="#000000">w</font></b><font color="#990000">(</font>m<font color="#990000">);</font>
     <b><font color="#000000">CPPAD_TESTVECTOR</font></b><font color="#990000">(</font><font color="#009900">double</font><font color="#990000">)</font> <b><font color="#000000">dw</font></b><font color="#990000">(</font>n<font color="#990000">);</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font>i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> <font color="#009900">int</font><font color="#990000">(</font>m<font color="#990000">);</font> i<font color="#990000">++)</font>
          w<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">.;</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font>i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> <font color="#009900">int</font><font color="#990000">(</font>m<font color="#990000">);</font> i<font color="#990000">++)</font>
     <font color="#FF0000">{</font>    w<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">1</font><font color="#990000">.;</font>
          dw    <font color="#990000">=</font> f<font color="#990000">.</font><b><font color="#000000">Reverse</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">,</font> w<font color="#990000">);</font>
          check <font color="#990000">=</font> <font color="#009900">double</font><font color="#990000">(</font>i<font color="#990000">-</font><font color="#993399">3</font><font color="#990000">)</font> <font color="#990000">*</font> std<font color="#990000">::</font><b><font color="#000000">pow</font></b><font color="#990000">(</font>x0<font color="#990000">,</font> <font color="#009900">double</font><font color="#990000">(</font>i <font color="#990000">-</font> <font color="#993399">4</font><font color="#990000">));</font>
          ok <font color="#990000">&amp;=</font> <b><font color="#000000">NearEqual</font></b><font color="#990000">(</font>dw<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">,</font> check<font color="#990000">,</font>  eps99 <font color="#990000">,</font> eps99<font color="#990000">);</font>
          w<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">.;</font>
     <font color="#FF0000">}</font>

     <b><font color="#0000FF">return</font></b> ok<font color="#990000">;</font>
<font color="#FF0000">}</font>
</tt></pre>
</font></code>
<hr>Input File: example/general/pow_int.cpp

</body>
</html>
