<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'
>
</script>
<head>
<title>CppAD::vectorBool Class: Example and Test</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="CppAD::vectorBool Class: Example and Test">
<meta name="keywords" id="keywords" content=" cppad::vectorbool class: example test bool vectorbool Cppad ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_vector_bool.cpp_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://coin-or.github.io/CppAD/" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="cppad_vector.cpp.htm" target="_top">Prev</a>
</td><td><a href="thread_alloc.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>utility</option>
<option>CppAD_vector</option>
<option>vector_bool.cpp</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>CppAD-&gt;</option>
<option>Install</option>
<option>Introduction</option>
<option>AD</option>
<option>ADFun</option>
<option>preprocessor</option>
<option>multi_thread</option>
<option>utility</option>
<option>ipopt_solve</option>
<option>Example</option>
<option>speed</option>
<option>Appendix</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>utility-&gt;</option>
<option>ErrorHandler</option>
<option>NearEqual</option>
<option>speed_test</option>
<option>SpeedTest</option>
<option>time_test</option>
<option>test_boolofvoid</option>
<option>NumericType</option>
<option>CheckNumericType</option>
<option>SimpleVector</option>
<option>CheckSimpleVector</option>
<option>nan</option>
<option>pow_int</option>
<option>Poly</option>
<option>LuDetAndSolve</option>
<option>RombergOne</option>
<option>RombergMul</option>
<option>Runge45</option>
<option>Rosen34</option>
<option>OdeErrControl</option>
<option>OdeGear</option>
<option>OdeGearControl</option>
<option>CppAD_vector</option>
<option>thread_alloc</option>
<option>index_sort</option>
<option>to_string</option>
<option>set_union</option>
<option>sparse_rc</option>
<option>sparse_rcv</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>CppAD_vector-&gt;</option>
<option>cppad_vector.cpp</option>
<option>vector_bool.cpp</option>
</select>
</td>
<td>vector_bool.cpp</td>
<td>Headings</td>
</tr></table><br>
@(@\newcommand{\W}[1]{ \; #1 \; }
\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\D}[2]{ \frac{\partial #1}{\partial #2} }
\newcommand{\DD}[3]{ \frac{\partial^2 #1}{\partial #2 \partial #3} }
\newcommand{\Dpow}[2]{ \frac{\partial^{#1}}{\partial  {#2}^{#1}} }
\newcommand{\dpow}[2]{ \frac{ {\rm d}^{#1}}{{\rm d}\, {#2}^{#1}} }@)@<center><b><big><big>CppAD::vectorBool Class: Example and Test</big></big></b></center>
<code><font color="blue"><pre><tt>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/utility/vector.hpp&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/utility/check_simple_vector.hpp&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;sstream&gt;</font> <i><font color="#9A1900">// sstream and string are used to test output operation</font></i>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;string&gt;</font>

<font color="#009900">bool</font> <b><font color="#000000">vectorBool</font></b><font color="#990000">(</font><font color="#009900">void</font><font color="#990000">)</font>
<font color="#FF0000">{</font>    <font color="#009900">bool</font> ok <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
     <b><font color="#0000FF">using</font></b> CppAD<font color="#990000">::</font>vectorBool<font color="#990000">;</font>

     <font color="#008080">vectorBool</font> x<font color="#990000">;</font>          <i><font color="#9A1900">// default constructor</font></i>
     ok <font color="#990000">&amp;=</font> <font color="#990000">(</font>x<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">==</font> <font color="#993399">0</font><font color="#990000">);</font>

     x<font color="#990000">.</font><b><font color="#000000">resize</font></b><font color="#990000">(</font><font color="#993399">2</font><font color="#990000">);</font>             <i><font color="#9A1900">// resize and set element assignment to bool</font></i>
     ok <font color="#990000">&amp;=</font> <font color="#990000">(</font>x<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">==</font> <font color="#993399">2</font><font color="#990000">);</font>
     x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> <b><font color="#0000FF">false</font></b><font color="#990000">;</font>
     x<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>

     <font color="#008080">vectorBool</font> <b><font color="#000000">y</font></b><font color="#990000">(</font><font color="#993399">2</font><font color="#990000">);</font>       <i><font color="#9A1900">// sizing constructor</font></i>
     ok <font color="#990000">&amp;=</font> <font color="#990000">(</font>y<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">==</font> <font color="#993399">2</font><font color="#990000">);</font>

     <b><font color="#0000FF">const</font></b> <font color="#008080">vectorBool</font> <b><font color="#000000">z</font></b><font color="#990000">(</font>x<font color="#990000">);</font> <i><font color="#9A1900">// copy constructor and const element access</font></i>
     ok <font color="#990000">&amp;=</font> <font color="#990000">(</font>z<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">==</font> <font color="#993399">2</font><font color="#990000">);</font>
     ok <font color="#990000">&amp;=</font> <font color="#990000">(</font> <font color="#990000">(</font>z<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">==</font> <b><font color="#0000FF">false</font></b><font color="#990000">)</font> <font color="#990000">&amp;&amp;</font> <font color="#990000">(</font>z<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">==</font> <b><font color="#0000FF">true</font></b><font color="#990000">)</font> <font color="#990000">);</font>

     x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>           <i><font color="#9A1900">// modify, assignment changes x</font></i>
     ok <font color="#990000">&amp;=</font> <font color="#990000">(</font>x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">==</font> <b><font color="#0000FF">true</font></b><font color="#990000">);</font>

     <i><font color="#9A1900">// resize x to zero and check that vector assignment works for both</font></i>
     <i><font color="#9A1900">// size zero and mathching sizes</font></i>
     x<font color="#990000">.</font><b><font color="#000000">resize</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">);</font>
     ok <font color="#990000">&amp;=</font> <font color="#990000">(</font>x<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">==</font> <font color="#993399">0</font><font color="#990000">);</font>
     ok <font color="#990000">&amp;=</font> <font color="#990000">(</font>y<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">==</font> z<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">());</font>
     <i><font color="#9A1900">//</font></i>
     x <font color="#990000">=</font> y <font color="#990000">=</font> z<font color="#990000">;</font>
     ok <font color="#990000">&amp;=</font> <font color="#990000">(</font> <font color="#990000">(</font>x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">==</font> <b><font color="#0000FF">false</font></b><font color="#990000">)</font> <font color="#990000">&amp;&amp;</font> <font color="#990000">(</font>x<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">==</font> <b><font color="#0000FF">true</font></b><font color="#990000">)</font> <font color="#990000">);</font>
     ok <font color="#990000">&amp;=</font> <font color="#990000">(</font> <font color="#990000">(</font>y<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">==</font> <b><font color="#0000FF">false</font></b><font color="#990000">)</font> <font color="#990000">&amp;&amp;</font> <font color="#990000">(</font>y<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">==</font> <b><font color="#0000FF">true</font></b><font color="#990000">)</font> <font color="#990000">);</font>
     ok <font color="#990000">&amp;=</font> <font color="#990000">(</font> <font color="#990000">(</font>z<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">==</font> <b><font color="#0000FF">false</font></b><font color="#990000">)</font> <font color="#990000">&amp;&amp;</font> <font color="#990000">(</font>z<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">==</font> <b><font color="#0000FF">true</font></b><font color="#990000">)</font> <font color="#990000">);</font>

     <i><font color="#9A1900">// test of push_vector</font></i>
     y<font color="#990000">.</font><b><font color="#000000">push_vector</font></b><font color="#990000">(</font>z<font color="#990000">);</font>
     ok <font color="#990000">&amp;=</font> y<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">==</font> <font color="#993399">4</font><font color="#990000">;</font>
     ok <font color="#990000">&amp;=</font> <font color="#990000">(</font> <font color="#990000">(</font>y<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">==</font> <b><font color="#0000FF">false</font></b><font color="#990000">)</font> <font color="#990000">&amp;&amp;</font> <font color="#990000">(</font>y<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">==</font> <b><font color="#0000FF">true</font></b><font color="#990000">)</font> <font color="#990000">);</font>
     ok <font color="#990000">&amp;=</font> <font color="#990000">(</font> <font color="#990000">(</font>y<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">]</font> <font color="#990000">==</font> <b><font color="#0000FF">false</font></b><font color="#990000">)</font> <font color="#990000">&amp;&amp;</font> <font color="#990000">(</font>y<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">]</font> <font color="#990000">==</font> <b><font color="#0000FF">true</font></b><font color="#990000">)</font> <font color="#990000">);</font>

     y<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">=</font> <b><font color="#0000FF">false</font></b><font color="#990000">;</font>           <i><font color="#9A1900">// element assignment to another element</font></i>
     x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> y<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">];</font>
     ok <font color="#990000">&amp;=</font> <font color="#990000">(</font>x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">==</font> <b><font color="#0000FF">false</font></b><font color="#990000">);</font>

     <i><font color="#9A1900">// test of output</font></i>
     std<font color="#990000">::</font><font color="#008080">string</font>        correct<font color="#990000">=</font> <font color="#FF0000">"01"</font><font color="#990000">;</font>
     std<font color="#990000">::</font><font color="#008080">string</font>        str<font color="#990000">;</font>
     std<font color="#990000">::</font><font color="#008080">ostringstream</font> buf<font color="#990000">;</font>
     buf <font color="#990000">&lt;&lt;</font> z<font color="#990000">;</font>
     str <font color="#990000">=</font> buf<font color="#990000">.</font><b><font color="#000000">str</font></b><font color="#990000">();</font>
     ok <font color="#990000">&amp;=</font> <font color="#990000">(</font>str <font color="#990000">==</font> correct<font color="#990000">);</font>

     <i><font color="#9A1900">// test resize(0), capacity, and clear</font></i>
     <font color="#008080">size_t</font> i <font color="#990000">=</font> x<font color="#990000">.</font><b><font color="#000000">capacity</font></b><font color="#990000">();</font>
     ok      <font color="#990000">&amp;=</font> i <font color="#990000">&gt;</font> <font color="#993399">0</font><font color="#990000">;</font>
     x<font color="#990000">.</font><b><font color="#000000">resize</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">);</font>
     ok      <font color="#990000">&amp;=</font> i <font color="#990000">==</font> x<font color="#990000">.</font><b><font color="#000000">capacity</font></b><font color="#990000">();</font>
     x<font color="#990000">.</font><b><font color="#000000">clear</font></b><font color="#990000">();</font>
     ok      <font color="#990000">&amp;=</font> <font color="#993399">0</font> <font color="#990000">==</font> x<font color="#990000">.</font><b><font color="#000000">capacity</font></b><font color="#990000">();</font>

     <i><font color="#9A1900">// test of push_back element</font></i>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font>i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> <font color="#993399">100</font><font color="#990000">;</font> i<font color="#990000">++)</font>
          x<font color="#990000">.</font><b><font color="#000000">push_back</font></b><font color="#990000">(</font> <font color="#990000">(</font>i <font color="#990000">%</font> <font color="#993399">3</font><font color="#990000">)</font> <font color="#990000">!=</font> <font color="#993399">0</font> <font color="#990000">);</font>
     ok <font color="#990000">&amp;=</font> <font color="#990000">(</font>x<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">==</font> <font color="#993399">100</font><font color="#990000">);</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font>i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> <font color="#993399">100</font><font color="#990000">;</font> i<font color="#990000">++)</font>
          ok <font color="#990000">&amp;=</font> <font color="#990000">(</font> x<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">==</font> <font color="#990000">((</font>i <font color="#990000">%</font> <font color="#993399">3</font><font color="#990000">)</font> <font color="#990000">!=</font> <font color="#993399">0</font><font color="#990000">)</font> <font color="#990000">);</font>

     <i><font color="#9A1900">// is that boolvector is</font></i>
     <i><font color="#9A1900">// a simple vector class with elements of type bool</font></i>
     CppAD<font color="#990000">::</font>CheckSimpleVector<font color="#990000">&lt;</font> <font color="#009900">bool</font><font color="#990000">,</font> vectorBool <font color="#990000">&gt;();</font>

     <b><font color="#0000FF">return</font></b> ok<font color="#990000">;</font>
<font color="#FF0000">}</font>
</tt></pre>
</font></code>
<hr>Input File: example/utility/vector_bool.cpp

</body>
</html>
