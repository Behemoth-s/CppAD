<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>The NumericType: Example and Test</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="The NumericType: Example and Test">
<meta name="keywords" id="keywords" content=" the numerictype: example test ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_numeric_type.cpp_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://coin-or.github.io/CppAD" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="numerictype.htm" target="_top">Prev</a>
</td><td><a href="checknumerictype.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>utility</option>
<option>NumericType</option>
<option>numeric_type.cpp</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>CppAD-&gt;</option>
<option>Install</option>
<option>Theory</option>
<option>AD</option>
<option>ADFun</option>
<option>preprocessor</option>
<option>multi_thread</option>
<option>utility</option>
<option>ipopt_solve</option>
<option>Example</option>
<option>speed</option>
<option>Appendix</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>utility-&gt;</option>
<option>ErrorHandler</option>
<option>NearEqual</option>
<option>speed_test</option>
<option>SpeedTest</option>
<option>time_test</option>
<option>test_boolofvoid</option>
<option>NumericType</option>
<option>CheckNumericType</option>
<option>SimpleVector</option>
<option>CheckSimpleVector</option>
<option>nan</option>
<option>pow_int</option>
<option>Poly</option>
<option>LuDetAndSolve</option>
<option>RombergOne</option>
<option>RombergMul</option>
<option>Runge45</option>
<option>Rosen34</option>
<option>OdeErrControl</option>
<option>OdeGear</option>
<option>OdeGearControl</option>
<option>CppAD_vector</option>
<option>thread_alloc</option>
<option>index_sort</option>
<option>to_string</option>
<option>set_union</option>
<option>sparse_rc</option>
<option>sparse_rcv</option>
<option>sparse2eigen</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>NumericType-&gt;</option>
<option>numeric_type.cpp</option>
</select>
</td>
<td>numeric_type.cpp</td>
<td>Headings</td>
</tr></table><br>
@(@\newcommand{\W}[1]{ \; #1 \; }
\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\D}[2]{ \frac{\partial #1}{\partial #2} }
\newcommand{\DD}[3]{ \frac{\partial^2 #1}{\partial #2 \partial #3} }
\newcommand{\Dpow}[2]{ \frac{\partial^{#1}}{\partial  {#2}^{#1}} }
\newcommand{\dpow}[2]{ \frac{ {\rm d}^{#1}}{{\rm d}\, {#2}^{#1}} }@)@

<center><b><big><big>The NumericType: Example and Test</big></big></b></center>
<pre><tt>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/cppad.hpp&gt;</font>

<b><font color="#0000FF">namespace</font></b> <font color="#FF0000">{</font> <i><font color="#9A1900">// Empty namespace</font></i>

    <i><font color="#9A1900">// -------------------------------------------------------------------</font></i>
    <b><font color="#0000FF">class</font></b> <font color="#008080">MyType</font> <font color="#FF0000">{</font>
    <b><font color="#0000FF">private</font></b><font color="#990000">:</font>
        <font color="#009900">double</font> d<font color="#990000">;</font>
    <b><font color="#0000FF">public</font></b><font color="#990000">:</font>
        <i><font color="#9A1900">// constructor from void</font></i>
        <b><font color="#000000">MyType</font></b><font color="#990000">(</font><font color="#009900">void</font><font color="#990000">)</font> <font color="#990000">:</font> <b><font color="#000000">d</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">.)</font>
        <font color="#FF0000">{</font> <font color="#FF0000">}</font>
        <i><font color="#9A1900">// constructor from an int</font></i>
        <b><font color="#000000">MyType</font></b><font color="#990000">(</font><font color="#009900">int</font> d_<font color="#990000">)</font> <font color="#990000">:</font> <b><font color="#000000">d</font></b><font color="#990000">(</font>d_<font color="#990000">)</font>
        <font color="#FF0000">{</font> <font color="#FF0000">}</font>
        <i><font color="#9A1900">// copy constructor</font></i>
        <b><font color="#000000">MyType</font></b><font color="#990000">(</font><b><font color="#0000FF">const</font></b> <font color="#008080">MyType</font> <font color="#990000">&amp;</font>x<font color="#990000">)</font>
        <font color="#FF0000">{</font>   d <font color="#990000">=</font> x<font color="#990000">.</font>d<font color="#990000">;</font> <font color="#FF0000">}</font>
        <i><font color="#9A1900">// assignment operator</font></i>
        <font color="#009900">void</font> <b><font color="#0000FF">operator</font></b> <font color="#990000">=</font> <font color="#990000">(</font><b><font color="#0000FF">const</font></b> <font color="#008080">MyType</font> <font color="#990000">&amp;</font>x<font color="#990000">)</font>
        <font color="#FF0000">{</font>   d <font color="#990000">=</font> x<font color="#990000">.</font>d<font color="#990000">;</font> <font color="#FF0000">}</font>
        <i><font color="#9A1900">// member function that converts to double</font></i>
        <font color="#009900">double</font> <b><font color="#000000">Double</font></b><font color="#990000">(</font><font color="#009900">void</font><font color="#990000">)</font> <b><font color="#0000FF">const</font></b>
        <font color="#FF0000">{</font>   <b><font color="#0000FF">return</font></b> d<font color="#990000">;</font> <font color="#FF0000">}</font>
        <i><font color="#9A1900">// unary plus</font></i>
        <font color="#008080">MyType</font> <b><font color="#0000FF">operator</font></b> <font color="#990000">+</font> <font color="#990000">(</font><font color="#009900">void</font><font color="#990000">)</font> <b><font color="#0000FF">const</font></b>
        <font color="#FF0000">{</font>   <font color="#008080">MyType</font> x<font color="#990000">;</font>
            x<font color="#990000">.</font>d <font color="#990000">=</font>  d<font color="#990000">;</font>
            <b><font color="#0000FF">return</font></b> x<font color="#990000">;</font>
        <font color="#FF0000">}</font>
        <i><font color="#9A1900">// unary plus</font></i>
        <font color="#008080">MyType</font> <b><font color="#0000FF">operator</font></b> <font color="#990000">-</font> <font color="#990000">(</font><font color="#009900">void</font><font color="#990000">)</font> <b><font color="#0000FF">const</font></b>
        <font color="#FF0000">{</font>   <font color="#008080">MyType</font> x<font color="#990000">;</font>
            x<font color="#990000">.</font>d <font color="#990000">=</font> <font color="#990000">-</font> d<font color="#990000">;</font>
            <b><font color="#0000FF">return</font></b> x<font color="#990000">;</font>
        <font color="#FF0000">}</font>
        <i><font color="#9A1900">// binary addition</font></i>
        <font color="#008080">MyType</font> <b><font color="#0000FF">operator</font></b> <font color="#990000">+</font> <font color="#990000">(</font><b><font color="#0000FF">const</font></b> <font color="#008080">MyType</font> <font color="#990000">&amp;</font>x<font color="#990000">)</font> <b><font color="#0000FF">const</font></b>
        <font color="#FF0000">{</font>   <font color="#008080">MyType</font> y<font color="#990000">;</font>
            y<font color="#990000">.</font>d <font color="#990000">=</font> d <font color="#990000">+</font> x<font color="#990000">.</font>d <font color="#990000">;</font>
            <b><font color="#0000FF">return</font></b> y<font color="#990000">;</font>
        <font color="#FF0000">}</font>
        <i><font color="#9A1900">// binary subtraction</font></i>
        <font color="#008080">MyType</font> <b><font color="#0000FF">operator</font></b> <font color="#990000">-</font> <font color="#990000">(</font><b><font color="#0000FF">const</font></b> <font color="#008080">MyType</font> <font color="#990000">&amp;</font>x<font color="#990000">)</font> <b><font color="#0000FF">const</font></b>
        <font color="#FF0000">{</font>   <font color="#008080">MyType</font> y<font color="#990000">;</font>
            y<font color="#990000">.</font>d <font color="#990000">=</font> d <font color="#990000">-</font> x<font color="#990000">.</font>d <font color="#990000">;</font>
            <b><font color="#0000FF">return</font></b> y<font color="#990000">;</font>
        <font color="#FF0000">}</font>
        <i><font color="#9A1900">// binary multiplication</font></i>
        <font color="#008080">MyType</font> <b><font color="#0000FF">operator</font></b> <font color="#990000">*</font> <font color="#990000">(</font><b><font color="#0000FF">const</font></b> <font color="#008080">MyType</font> <font color="#990000">&amp;</font>x<font color="#990000">)</font> <b><font color="#0000FF">const</font></b>
        <font color="#FF0000">{</font>   <font color="#008080">MyType</font> y<font color="#990000">;</font>
            y<font color="#990000">.</font>d <font color="#990000">=</font> d <font color="#990000">*</font> x<font color="#990000">.</font>d <font color="#990000">;</font>
            <b><font color="#0000FF">return</font></b> y<font color="#990000">;</font>
        <font color="#FF0000">}</font>
        <i><font color="#9A1900">// binary division</font></i>
        <font color="#008080">MyType</font> <b><font color="#0000FF">operator</font></b> <font color="#990000">/</font> <font color="#990000">(</font><b><font color="#0000FF">const</font></b> <font color="#008080">MyType</font> <font color="#990000">&amp;</font>x<font color="#990000">)</font> <b><font color="#0000FF">const</font></b>
        <font color="#FF0000">{</font>   <font color="#008080">MyType</font> y<font color="#990000">;</font>
            y<font color="#990000">.</font>d <font color="#990000">=</font> d <font color="#990000">/</font> x<font color="#990000">.</font>d <font color="#990000">;</font>
            <b><font color="#0000FF">return</font></b> y<font color="#990000">;</font>
        <font color="#FF0000">}</font>
        <i><font color="#9A1900">// compound assignment addition</font></i>
        <font color="#009900">void</font> <b><font color="#0000FF">operator</font></b> <font color="#990000">+=</font> <font color="#990000">(</font><b><font color="#0000FF">const</font></b> <font color="#008080">MyType</font> <font color="#990000">&amp;</font>x<font color="#990000">)</font>
        <font color="#FF0000">{</font>   d <font color="#990000">+=</font> x<font color="#990000">.</font>d<font color="#990000">;</font> <font color="#FF0000">}</font>
        <i><font color="#9A1900">// compound assignment subtraction</font></i>
        <font color="#009900">void</font> <b><font color="#0000FF">operator</font></b> <font color="#990000">-=</font> <font color="#990000">(</font><b><font color="#0000FF">const</font></b> <font color="#008080">MyType</font> <font color="#990000">&amp;</font>x<font color="#990000">)</font>
        <font color="#FF0000">{</font>   d <font color="#990000">-=</font> x<font color="#990000">.</font>d<font color="#990000">;</font> <font color="#FF0000">}</font>
        <i><font color="#9A1900">// compound assignment multiplication</font></i>
        <font color="#009900">void</font> <b><font color="#0000FF">operator</font></b> <font color="#990000">*=</font> <font color="#990000">(</font><b><font color="#0000FF">const</font></b> <font color="#008080">MyType</font> <font color="#990000">&amp;</font>x<font color="#990000">)</font>
        <font color="#FF0000">{</font>   d <font color="#990000">*=</font> x<font color="#990000">.</font>d<font color="#990000">;</font> <font color="#FF0000">}</font>
        <i><font color="#9A1900">// compound assignment division</font></i>
        <font color="#009900">void</font> <b><font color="#0000FF">operator</font></b> <font color="#990000">/=</font> <font color="#990000">(</font><b><font color="#0000FF">const</font></b> <font color="#008080">MyType</font> <font color="#990000">&amp;</font>x<font color="#990000">)</font>
        <font color="#FF0000">{</font>   d <font color="#990000">/=</font> x<font color="#990000">.</font>d<font color="#990000">;</font> <font color="#FF0000">}</font>
    <font color="#FF0000">}</font><font color="#990000">;</font>
<font color="#FF0000">}</font>
<font color="#009900">bool</font> <b><font color="#000000">NumericType</font></b><font color="#990000">(</font><font color="#009900">void</font><font color="#990000">)</font>
<font color="#FF0000">{</font>   <font color="#009900">bool</font> ok  <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
    <b><font color="#0000FF">using</font></b> CppAD<font color="#990000">::</font>AD<font color="#990000">;</font>
    <b><font color="#0000FF">using</font></b> CppAD<font color="#990000">::</font>CheckNumericType<font color="#990000">;</font>

    CheckNumericType<font color="#990000">&lt;</font>MyType<font color="#990000">&gt;</font>            <font color="#990000">();</font>

    CheckNumericType<font color="#990000">&lt;</font><font color="#009900">int</font><font color="#990000">&gt;</font>               <font color="#990000">();</font>
    CheckNumericType<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;</font>            <font color="#990000">();</font>
    CheckNumericType<font color="#990000">&lt;</font> AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;</font> <font color="#990000">&gt;</font>      <font color="#990000">();</font>
    CheckNumericType<font color="#990000">&lt;</font> AD<font color="#990000">&lt;</font> AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;</font> <font color="#990000">&gt;</font> <font color="#990000">&gt;();</font>

    <b><font color="#0000FF">return</font></b> ok<font color="#990000">;</font>
<font color="#FF0000">}</font>
</tt></pre>

<hr>Input File: example/general/numeric_type.cpp

</body>
</html>
